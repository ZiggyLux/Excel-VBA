DOCUMENTATION DE LA LIBRAIRIE EXCEL VBA
Package : common

================================================================================
LISTE DES MODULES  ET DES COMPOSANTS

"doc/Excel VBA.Common.doc.txt"
	Ce document

"Common.excelMacro.bas" --------------------------------------------------------
	Ce module contient les fonctionnalités les plus générales et partageables

"DateHandling.excelMacro.bas" -------------------------------------------------
  Ce module fournit quelques outils pour la gestion des dates sous Excel

"EnteteTable.excelMacro.bas" ---------------------------------------------------
	Ce module permet de mettre en forme une en-tête de table

"ErrorHandling.excelMacro.bas" -------------------------------------------------
  Ce module fournit les outils à la bonne gestion des erreurs sous Excel

"ExtractJoint.excelMacro.bas" --------------------------------------------------
  Ce modèle montre comment extraire les données d'une table avec jointure

"FileSysUtil.excelMacro.bas" ---------------------------------------------------
	Ce module fournit quelques fonctions générales sur le traitement des fichiers

"TypeCellule.excelMacro.bas" ---------------------------------------------------
	Ce module illustre comment détecter le type d'une cellule
	
"RangeDetection.excelMacro.bas" ------------------------------------------------
	Ce module permet la détermination de 'zone englobante' à partir d'une cellule
	d'origine
	
"RegExpUtil_par-PGM.excelMacro.bas" --------------------------------------------
	Ce module fournit des fonctions d'enrobage pour l'usage des expressions
	régulières en VBA. Ecrit par P.G. Matthews.

"SheetUtil.excelMacro.bas" -----------------------------------------------------
	Ce module fournit quelques outils pour gérer les feuilles et les classeurs
	
================================================================================
"Common.excelMacro.bas":
------------------------

Sub updateScreen(): ------------------------------------------------------------
    Permet d'activer la mise à jour en temps réel de l'écran en cours
    d'exécution. Cette fonction sert à désactiver la suivante.

Sub freezeScreen(): ------------------------------------------------------------
    Permet d'interompre la mise à jour en temps réel de l'écran en cours
    d'exécution

Function getFormula(r As Range) As String: -------------------------------------
    Affiche la formule associée à une cellule. Voir un exemple avec
    Common_001.figure.png

================================================================================
"TableColumnNames.excelMacro.bas":
----------------------------------

Sub formatTableColumnNames(): --------------------------------------------------
    Permet de mettre en forme rapidement une en-tête de table ou de liste. Voir
    un exemple avec TableColumnNames_001.figure.png

================================================================================
"CellValueType.excelMacro.bas":
-------------------------------

Public Function getCellValueType(v As Variant) As Integer: ---------------------
		Cette fonction est simplement une encapsulation de la fonction VarType().
		Voir un exemple avec CellValueType_001.figure.png

Public Function getCellValueTypeAsText(v As Variant) As String: ----------------
    Cette fonction est simplement une encapsulation de la fonction VarType()
    mais retourne le type sous forme de chaîne de caractères (exemple "vbError
    (10)"). Voir un exemple avec CellValueType_001.figure.png

================================================================================
"DateHandling.excelMacro.bas":
----------------------------------

Public getDaysOfWeek1char(Optional strLng As String) ---------------------------
    Cette fonction retourne le tableau en colonnes des initiales des jours de la 
    semaine en commençant par le dimanche. La langue-paramètre peut être "fr" ou 
    "en".
    Pour un aperçu d'utilisation, voir DateHandling_001.figure.png
		Une version transposée en lignes peut être obtenue par la ws-fonction 
		"TRANSPOSE(..)".
    
Public getDaysOfWeek3chars(Optional strLng As String) --------------------------
    Cette fonction retourne le tableau en colonnes des abrégés des jours de la 
    semaine en commençant par le dimanche. La langue-paramètre peut être "fr" ou
    "en".
    Pour un aperçu d'utilisation, voir DateHandling_001.figure.png
		Une version transposée en lignes peut être obtenue par la ws-fonction 
		"TRANSPOSE(..)".
    
Public getDaysOfWeekAllchars(Optional strLng As String) ------------------------
    Cette fonction retourne le tableau en colonnes des noms des jours de la 
    semaine en commençant par le dimanche. La langue-paramètre peut être "fr" ou
    "en".
    Pour un aperçu d'utilisation, voir DateHandling_001.figure.png
		Une version transposée en lignes peut être obtenue par la ws-fonction 
		"TRANSPOSE(..)".

Public getDayOfWeek1char(dt As Date, Optional strLng As String) ----------------
		Cette fonction retourne l'initiale du jour de la semaine d'une date. La 
		langue-paramètre peut être "fr" ou "en".
    Pour un aperçu d'utilisation, voir DateHandling_002.figure.png
        
Public getDayOfWeek3chars(dt As Date, Optional strLng As String) ----------------
		Cette fonction retourne l'abrégé du jour de la semaine d'une date. La 
		langue-paramètre peut être "fr" ou "en".
    Pour un aperçu d'utilisation, voir DateHandling_002.figure.png
    
Public getDayOfWeekAllchars(dt As Date, Optional strLng As String) ----------------
		Cette fonction retourne le nom du jour de la semaine d'une date. La 
		langue-paramètre peut être "fr" ou "en".
    Pour un aperçu d'utilisation, voir DateHandling_002.figure.png
 
================================================================================
"ErrorHandling.excelMacro.bas":
-------------------------------

Public returnExcelError(str As String) as Variant ------------------------------
    Cette fonction montre comment retourner une erreur Excel dans un Variant
    Pour un aperçu d'utilisation, voir ErrorHandling_001.figure.png
================================================================================
"ExtractJoin.excelMacro.bas":
-------------------------------

Public ExtractJoin() --------------------------------------------------------
    Cette procédure est un modèle pour extraire les données d'une feuille de
    calcul vers une autre feuille avec jointure sur une autre table.
    Pour un aperçu d'utilisation, voir ExtractJoin_001.figure.png
================================================================================
"FileSysUtil.excelMacro.bas":
-------------------------------

Public EstFichierPresent(str as String) as Boolean -----------------------------
	Cette fonction permet d'infiquer si le fichier dont le nom de chemin est passé
	en paramètre existe ou pas.

================================================================================
"RangeDetection.excelMacro.bas":
-------------------------------

Public Function walkExtendingRange(r As Range, iMoveRow As Integer, iMoveCol
  As Integer) As Range ---------------------------------------------------------
  	Cette fonction permet de connaître la plage englobante à partir d'une 
  	cellule et à partir de deux incréments de ligne et de colonnes. Les trois
  	valeurs utilisées sont normalement:
  		-1 pour se déplacer vers les lignes/colonnes décroisantes
  		0 pour ne pas se déplacer suivant les lignes/colonnes
  		1 pour se déplacer vers les lignes/colonnes croissantes
 
Public Function getRowCntFromCell(rngStartCell As Range, Optional iNS As Integer 
	= 1) As Integer --------------------------------------------------------------
		Cette fonction calcule le nombre de lignes de la zone englobante
  	Pour un aperçu d'utilisation, voir RangeDetection_001.figure.png

Public Function getColCntFromCell(rngStartCell As Range, Optional iNS As Integer 
	= 1) As Integer --------------------------------------------------------------
		Cette fonction calcule le nombre de colonnes de la zone englobante
  	Pour un aperçu d'utilisation, voir RangeDetection_001.figure.png

Public Sub DetectRangeActiveCell_SE() ------------------------------------------
 		Cette procédure est un exemple d'utilisation de la fonction précédente. Elle
 		détecte la zone englobante à partir de la cellule active en allant vers le
 		Sud-Est.
  	Pour un aperçu d'utilisation, voir RangeDetection_001.figure.png

================================================================================
"RegExpUtil_par-PGM.excelMacro.bas":
------------------------------------

Note : Un classeur de démo est disponible sous le nom suivant
		ExpressionsRegulieres_par-PGM.xlsm

Public Function RegExpFind(LookIn As String, PatternStr As String, Optional Pos,
        Optional MatchCase As Boolean = True, Optional ReturnType As Long = 0,
        Optional MultiLine As Boolean = False) ---------------------------------
    Cette fonction recherche les correspondances d'une expression régulière 
    (PatternStr) dans une chaîne donnée (LookIn).
		La casse est prise en compte par défaut (MatchCase). Cette fonction peut 
		retourner une correspondance si on demande une position ou indice, ou un 
		tableau de correspondance si aucune position n’est précisée.
		Suivant le type indiqué (ReturnType), la valeur retournée est soit la valeur 
		de la correspondance, soit son décalage dans la chaîne, soit sa longueur.
	  Une autre option (Multiline) permet de considérer un champ avec des retours 
	  à la ligne comme plusieurs sous-chaînes concaténées ou comme une seule.

Function RegExpFindExtended(LookIn As String, PatternStr As String, Optional Pos,
    Optional MatchCase As Boolean = True, Optional MultiLine As Boolean = False)
		Cette fonction est similaire à RegExpFind mais elle retourne en bloc et sous 
		forme de tableau la valeur de la correspondance, le décalage et la longueur.

Function RegExpFindSubmatch(LookIn As String, PatternStr As String, Optional MatchPos,
    Optional SubmatchPos, Optional MatchCase As Boolean = True,
    Optional MultiLine As Boolean = False)
		Cette fonction recherche les occurences et sous-occurences d'une chaîne qui
		répondent à une RegExp. Il est possible de se restreindre à une ocurrence 
		(MatchPos) et à une sous-occurrence (SubmatchPos) de cette première.

Function RegExpReplace(LookIn As String, PatternStr As String, Optional ReplaceWith As String = "",
    Optional ReplaceAll As Boolean = True, Optional MatchCase As Boolean = True,
    Optional MultiLine As Boolean = False)
		Cette fonction remplace des occurrences d'une chaîne qui répondent à une 
		RegExp par un texte. En plaçant l'option ReplaceAll à False, seule la 
		première occurrence est remplacée.
		
Function RegExpReplaceRange(LookIn As String, PatternStr As String, Optional ReplaceWith As String = "",
    Optional StartAt As Long = 1, Optional EndAt As Long = 0, Optional MatchCase As Boolean = True,
    Optional MultiLine As Boolean = False)
		Cette fonction remplace une plage d'occurrences d'une chaîne qui répondent à 
		une RegExp chacune par un texte. Par défaut, toutes les occurrences sont
		remplacées.
		
Function RegExpReplaceExpression(LookIn As String, PatternStr As String, Expression As String,
    Optional StartAt As Long = 1, Optional EndAt As Long = 0,
    Optional MatchCase As Boolean = True, Optional MultiLine As Boolean = False)
		Cette fonction est similaire à la précédente mais les occurences sont
		remplacées par l'évaluation d'une expression qui peut incorporer certaines
		fonctions	intégrées d'Excel.
	
================================================================================
"SheetUtil.excelMacro.bas":
---------------------------

Public Function getSheetTypeByName(strFeuille As String, wb As Workbook) 
  As String
  	Cette procédure retourne le type de feuille d'un classeur
  	Pour un aperçu d'utilisation, voir SheetUtil_001.figure.png

Public Function VerifierExistenceFeuille(strFeuille As String, fRecreer As Boolean)
	As Boolean
		Cette function vérifie si une feuille de calcul ayant un certain nom existe
		dans le classeur actif. Si c'est le cas, elle demande s'il faut réinitialiser.
		Si la feuille n'existe pas et que l'utilisateur confirme sa création, la feuille
		est créée et la confction retourne Vrai, sinon la fonction retourne Faux.
		Si la feuille existe sous un autre type, la fonction l'indique et retourne Faux.
		Pour avoir un aperçu de fenêtre de confirmation, voir SheetUtil_002.figure.png.
================================================================================
Fin